####################################################################
# Libs 2.0
####################################################################
lib.txRkwBasics {

    #===============================================================
    # Responsive Images v2.0
    #===============================================================
	responsiveImage = FLUIDTEMPLATE
	responsiveImage {

        file = {$plugin.tx_rkwbasics.view.templateRootPath}FluidTemplateLibs/ResponsiveImages.html
        settings {

            lazyLoading = 1
            titleFallback = Image
            additionalAttributes =

            breakpoint {
                desktop = {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.desktop}
                tablet =  {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.tablet}
                mobile2 = {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.mobile2}
                mobile = {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.mobile}
            }

            maxWidth {
                desktop = 2000
                tablet = {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.desktop}
                mobile2 = {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.tablet}
                mobile = {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.mobile2}
                fallback = {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.mobile}
            }

            cropVariant {
                desktop = Default
                tablet = Default
                mobile2 = Default
                mobile = Default
                fallback = Default
            }
        }

        variables {

            file = TEXT
            file {
                data = field:file
                stdWrap.ifEmpty.cObject = TEXT
                stdWrap.ifEmpty.cObject {
                    value.current = 1
                }
            }

            additionalAttributes = TEXT
            additionalAttributes {
                data = field:additionalAttributes
            }

            treatIdAsReference = TEXT
            treatIdAsReference {
                data = field:treatIdAsReference
                stdWrap.ifEmpty.cObject = COA
                stdWrap.ifEmpty.cObject {

                    // set default to 1, but do NOT do this in case value was explicitly set to zero
                    10 = TEXT
                    10 {
                        value = 1
                        if.equals.data = field:treatIdAsReference
                        if.value = 0
                        if.negate = 1
                    }
                }
            }

            title = TEXT
            title {

                data = field:title
                stdWrap.ifEmpty.cObject = COA
                stdWrap.ifEmpty.cObject {

                    // get title of references
                    10 = FILES
                    10 {
                        if.isPositive < lib.txRkwBasics.responsiveImage.variables.file
                        if.isPositive.if.isTrue < lib.txRkwBasics.responsiveImage.variables.treatIdAsReference
                        references < lib.txRkwBasics.responsiveImage.variables.file
                        renderObj = TEXT
                        renderObj {
                           data = file:current:title
                        }
                    }

                    // get title of normal files
                    20 = FILES
                    20 {
                        if.isPositive < lib.txRkwBasics.responsiveImage.variables.file
                        if.isPositive.if.isFalse < lib.txRkwBasics.responsiveImage.variables.treatIdAsReference
                        files < lib.txRkwBasics.responsiveImage.variables.file
                        renderObj = TEXT
                        renderObj {
                           data = file:current:title
                        }
                    }
                }
            }
        }
	}


	#===============================================================
    # Canonical-Tag
    #===============================================================
    canonical = COA_INT
    canonical {
        10 = COA_INT
        10 {
            # Default: Use normal canonical based on current page id
            10 = TEXT
            10 {
                typolink {


                    parameter.data = TSFE:id
                    forceAbsoluteUrl = 1
                    returnLast = url

                    additionalParams.cObject = COA
                    additionalParams.cObject {
                        10 = TEXT
                        10 {
                            dataWrap = &tx_ttnews[tt_news]={GP:tx_ttnews|tt_news}
                            if.isTrue.data = GP:tx_ttnews|tt_news
                        }

                        20 = TEXT
                        20 {
                            dataWrap = &tx_ttnews[cat]={GP:tx_ttnews|cat}
                            if.isTrue.data = GP:tx_ttnews|cat
                        }

                        30 = TEXT
                        30 {
                            dataWrap = &tx_rkwconsultant_rkwconsultant[controller]={GP:tx_rkwconsultant_rkwconsultant|controller}&tx_rkwconsultant_rkwconsultant[action]={GP:tx_rkwconsultant_rkwconsultant|action}&tx_rkwconsultant_rkwconsultant[consultant]={GP:tx_rkwconsultant_rkwconsultant|consultant}
                            if.isTrue.data = GP:tx_rkwconsultant_rkwconsultant|consultant
                        }

                        40 = TEXT
                        40 {
                            dataWrap = &tx_rkwevents_pi1[controller]={GP:tx_rkwevents_pi1|controller}&tx_rkwevents_pi1[action]={GP:tx_rkwevents_pi1|action}&tx_rkwevents_pi1[event]={GP:tx_rkwevents_pi1|event}
                            if.isTrue.data = GP:tx_rkwevents_pi1|event
                        }
                    }
                }

                if.isFalse.field = tx_rkwbasics_use_as_canonical
            }

            # Alternative: Use canonical based on old link
            20 = TEXT
            20 {
                value = http://{field:tx_rkwbasics_old_domain}/{field:tx_rkwbasics_old_link}
                value.insertData = 1

                if.isTrue.field = tx_rkwbasics_use_as_canonical
            }
        }

        wrap = <link href="|" rel="canonical">
    }
}


####################################################################
# Libs 1.0
# @deprecated
####################################################################
plugin.tx_rkwbasics.libs {

    #===============================================================
    # Canonical-Tag
    #===============================================================
    canonical < lib.txRkwBasics.canonical


    #===============================================================
    # Responsive Images v1.0
    #===============================================================
    responsiveImages {
        sourceCollection {
            // IMPORTANT: Order of the sources matters! The browser takes the first one that matches and ignores the rest
            // So we always start with the high resolutions!
            desktopRetina2 {
                if {
                    value = {$styles.content.imgtext.layoutKey}
                    equals = default
                    negate = 1
                }

                maxW = {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.desktop}
                pixelDensity = 2

                srcsetCandidate = {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.desktop}w 2x
                mediaQuery = (min-device-width: {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.desktop}px) AND (min-resolution: 192dpi)
                dataKey = desktopRetina2
            }

            desktop {
                if {
                    value = {$styles.content.imgtext.layoutKey}
                    equals = default
                    negate = 1
                }

                maxW = {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.desktop}

                srcsetCandidate = {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.desktop}w
                mediaQuery = (min-device-width: {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.desktop}px)
                dataKey = desktop
            }


            # ================================================================================
            tabletRetina3 {
                if {
                    value = {$styles.content.imgtext.layoutKey}
                    equals = default
                    negate = 1
                }

                maxW = {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.tablet}
                pixelDensity = 3

                srcsetCandidate = {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.tablet}w 3x
                mediaQuery = (min-device-width: {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.tablet}px) AND (min-resolution: 350dpi)
                dataKey = tabletRetina3
            }

            tabletRetina2 {
                if {
                    value = {$styles.content.imgtext.layoutKey}
                    equals = default
                    negate = 1
                }

                maxW = {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.tablet}
                pixelDensity = 2

                srcsetCandidate = {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.tablet}w 2x
                mediaQuery = (min-device-width: {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.tablet}px) AND (min-resolution: 192dpi)
                dataKey = tabletRetina2
            }

            tablet {
                if {
                    value = {$styles.content.imgtext.layoutKey}
                    equals = default
                    negate = 1
                }

                maxW = {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.tablet}

                srcsetCandidate = {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.tablet}w
                mediaQuery = (min-device-width: {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.tablet}px)
                dataKey = tablet
            }

            # ================================================================================

            mobileRetina2 {
                if {
                    value = {$styles.content.imgtext.layoutKey}
                    equals = default
                    negate = 1
                }

                maxW = {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.mobile}
                pixelDensity = 2

                srcsetCandidate = {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.mobile}w 2x
                mediaQuery = (min-device-width: {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.mobile}px) AND (min-resolution: 192dpi)
                dataKey = mobileRetina2
            }
            mobile {
                if {
                    value = {$styles.content.imgtext.layoutKey}
                    equals = default
                    negate = 1
                }

                maxW = {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.mobile}

                srcsetCandidate = {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.mobile}w
                mediaQuery = (min-device-width: {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.mobile}px)
                dataKey = mobile
            }

            # =================================================
            # Override maxW if set maxW is smaller than breakpoint!
            # =================================================
            desktop.maxW.override < .mobile.maxW.override
            desktop.maxW.override.if.value = {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.desktop}
            desktopRetina2.maxW.override < .desktop.maxW.override

            tablet.maxW.override < .mobile.maxW.override
            tablet.maxW.override.if.value = {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.tablet}
            tabletRetina2.maxW.override < .tablet.maxW.override
            tabletRetina3.maxW.override < .tablet.maxW.override

            mobile.maxW.override = {$styles.content.imgtext.maxW}
            mobile.maxW.override.if {
                value = {$plugin.tx_rkwbasics.settings.responsiveImages.breakpoints.mobile}
                isLessThan = {$styles.content.imgtext.maxW}
            }
            mobileRetina2.maxW.override < .mobile.maxW.override
        }
    }
}
